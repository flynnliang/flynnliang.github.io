{"meta":{"title":"Flynn's Blog","subtitle":"天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣.","description":"爬的还是山,喝的还是水,敲的还是键盘,跪的不是搓衣板","author":"flynn","url":"http://yoursite.com"},"pages":[{"title":"","date":"2016-12-04T02:18:52.546Z","updated":"2016-12-04T02:18:52.546Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"404"},{"title":"","date":"2016-12-03T13:55:25.000Z","updated":"2016-12-03T14:52:05.481Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2016-12-03T13:52:20.000Z","updated":"2016-12-03T14:53:11.060Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2016-12-03T14:50:55.000Z","updated":"2016-12-03T14:54:49.670Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"docker on Windows","slug":"docker-on-Windows","date":"2016-12-04T07:11:58.000Z","updated":"2016-12-04T10:42:17.593Z","comments":true,"path":"2016/12/04/docker-on-Windows/","link":"","permalink":"http://yoursite.com/2016/12/04/docker-on-Windows/","excerpt":"docker安装简略教程本文不涉及任何Docker技术解释，纯粹只marr以下docker小白的环境安装过程及相应常用的命令。对于docker小白的我来说，Dockerfile、镜像、容器三者之间的关系是比较困扰。 docker的图标一头驮着很多集装箱的鲸鱼，大意上可以解释为Dockerfile是面向开发者，开发者编写相应的Dockerfile文件构建所需的镜像，也就是镜像是交付的标准，由镜像运行容器，容器就等同于图标中的集装箱。 简单来讲，Dockerfile构建出Docker镜像，通过Docker镜像运行Docker容器。","text":"docker安装简略教程本文不涉及任何Docker技术解释，纯粹只marr以下docker小白的环境安装过程及相应常用的命令。对于docker小白的我来说，Dockerfile、镜像、容器三者之间的关系是比较困扰。 docker的图标一头驮着很多集装箱的鲸鱼，大意上可以解释为Dockerfile是面向开发者，开发者编写相应的Dockerfile文件构建所需的镜像，也就是镜像是交付的标准，由镜像运行容器，容器就等同于图标中的集装箱。 简单来讲，Dockerfile构建出Docker镜像，通过Docker镜像运行Docker容器。 搭建基本过程 win7 &amp; virtualbox中搭载Centos7 安装Docker Engine 安装Docker Compose 拉取Hello Word镜像，UP win7 &amp; virtualbox中搭载Centos7在win系统中安装virtualbox及搭载Centos7系统于安装普通软件无异，其中需注意Centos7建议安装精简无GUI版本，两者下载地址如下： 清华大学开源软件镜像站 Centos7 ISO下载 VirtualBox 5.1.10 官网下载 注意：在virtualbox 设置中: 在网络选项给Centos虚拟机分配两张网卡，类型为NAT(并且添加端口转发，子系统端口22用于SSH登陆虚拟机) 和 Host-Only。 设置挂载共享目录，也可用XFTP在宿主机与虚拟机共享文件。 为虚拟机分配3~4G内存，避免容器启动内存不足启动失败。 为了避免使用yum命令下载过慢，提前将yum源切换成国内的，例如163源。 先安装wget避免提示bash 无该命令 1$ yum install wget 备份原REPO文件 1$ sudo mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 跳转至repo目录 1$ cd /etc/yum.repos.d/ 获取网易163 repo文件 1$ wget http://mirrors.163.com/.help/CentOS7-Base-163.repo 重新生成yum缓存并更新软件 123$ wget http://mirrors.163.com/.help/CentOS7-Base-163.repo$ yum update 安装Docker Enginedocker engine安装方法有两种，都是根据DOCKER官网过程结合自己遇到的坑翻译过来，各位看官见仁见智地参考吧。 Install with yum 添加 docker 的 repo(复制下面命令直接enter执行就ok) sudo tee /etc/yum.repos.d/docker.repo &lt;&lt;-&apos;EOF&apos; [dockerrepo] name=Docker Repository baseurl=https://yum.dockerproject.org/repo/main/centos/7/ enabled=1 gpgcheck=1 gpgkey=https://yum.dockerproject.org/gpg EOF 安装docker包 1$ sudo yum install docker-engine 如果提示docker-engine package不存在，直接执行 1$ sudo yum install docker 添加自定义系统服务 docker.service 1$ sudo systemctl enable docker.service 启动docker(守护进程) 1$ sudo systemctl start docker 设置docker开机自启动 1$ systemctl enable docker 校验docker-engine安装是否成功 拉取测试镜像hello-world验证: 1$ sudo docker run --rm hello-world 如果输入如下信息则说明docker-engine安装成功: Unable to find image &apos;hello-world:latest&apos; locally latest: Pulling from library/hello-world c04b14da8d14: Pull complete Digest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9 Status: Downloaded newer image for hello-world:latest Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub. 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker Hub account: https://hub.docker.com For more examples and ideas, visit: https://docs.docker.com/engine/userguide/ 添加 docker 用户组由于docker守护进程没有使用TCP而是绑定了unix socket端口，但是Unix socket只能被root用户使用，其他用户只能通过sudo才能使用。所以为了避免不必要的麻烦，创建个unix用户组docker并把你常用的用户添加到该组中。 创建组 1$ sudo groupadd docker 将当前用户添加入docker组 1$ usermod -aG docker $&#123;USER&#125; 配置 docker registry这是天朝网络的限制带来的小弊端，避免后期使用docker拉取镜像的时候，慢得像蜗牛，可以采用某些加速器或局域网私服，本人用daocloud 的加速器, 至于daocloud我也懒得注册，就直接在网上各种博客找了个大咖的daocloud id使用了： 1$ curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://你自己的daoid.m.daocloud.io 安装docker compose建议通过python-pip进行安装docker compose, 其中python-pip又有两种安装方法 安装Python-pip wget安装法: wget https://bootstrap.pypa.io/get-pip.py --no-check-certificate python get-pip.py yum安装法 首先安装epel扩展源： 1$ sudo yum -y install epel-release 安装pip 1$ sudo yum -y install python-pip 通过pip安装docker compose1$ pip install docker-compose 测试docker-compose是否安装成功： $ docker-compose --version docker-compose version: 1.9.0 docker常用命令一切技术都是人偷懒的工具，docker也不例外，都是工具不用它就是遗留在角落的朽木，所以常用命令直接mark下链接，以后用的时候看。 常用docker命令，及一些坑 总结英语是硬伤，在此非常感谢我项目团队成员对我的帮助，有前人的引路，才会少踩很多坑，thanks。","categories":[{"name":"容器","slug":"容器","permalink":"http://yoursite.com/categories/容器/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://yoursite.com/tags/docker/"}]},{"title":"hexo + github  搭建博客","slug":"hexo-github-搭建博客","date":"2016-12-04T02:31:32.000Z","updated":"2016-12-04T05:55:27.163Z","comments":true,"path":"2016/12/04/hexo-github-搭建博客/","link":"","permalink":"http://yoursite.com/2016/12/04/hexo-github-搭建博客/","excerpt":"HEXO是啥有懒人就有需求，对于我这类拿来主义的绝世懒人，hexo绝对我胃口。言简意赅，hexo就是快速搭建个人blog的众多利器—-静态博客框架.","text":"HEXO是啥有懒人就有需求，对于我这类拿来主义的绝世懒人，hexo绝对我胃口。言简意赅，hexo就是快速搭建个人blog的众多利器—-静态博客框架. HEXO 环境搭建大致安装过程(本人WIN7系统 + JDK8 其他童鞋应拜访名门正派： 安装 git 下载地址 安装 node.js 下载地址 安装 hexo 来发 DEMO(HelloWord) 部署 github(或国内的coding) git 和 node.js直接安装就了事，进入正题华丽的分割线 以下所有命令强烈建议在git bash命令窗口执行，别跳CMD的坑 npm镜像切换1$ npm config set registry \"https://registry.npm.taobao.org\" 避免天朝傲娇的网络突然犯病不争气，奈何我们苦苦等待消磨生命,切换成淘宝的镜像。 安装命令1$ npm install -g hexo 1$ hexo version 命令，若出现hexo版本信息则安装成功，若否我暂未遇到爱莫能助。 到此hexo静态博客框架的环境搞定，这节奏这速度我等懒惰之人最喜欢了。 HEXO的Hello-Word只闻肉香不见肉，是我修猿之路上最不喜欢的，但凡接触新事物都是how –&gt; what –&gt; why的顺序。先用得飞起，再去了解它，最后再深入。贴张不知哪位大侠的hexo的博客图(若侵权联系下) 初始化博客目录 新建博客目录(如D:\\Users\\flynn\\hblog) 进入该目录右键选择GIT BASH HERE进入bash命令窗口执行 1$ hexo init 安装依赖 1$ npm install 此时在博客目录将自动生成文件，暂时只需关注的_config.yml(博客站配置文件)，source(资源文件夹，其中文章md文件都在/source/_posts目录下)，themes(hexo主题文件夹) 本地发布hexo博客执行 1$ hexo server 命令即可，浏览器访问http://localhost:4000 如下: 部署至github或coding 新建github/coding项目仓库，开启个人Page服务其中不多做介绍可参考Github Page 和Coding Page，其中最关键仓库名称范例:用户名.github.io(github)和 用户名.coding.me(coding) 初始化本地git commit全局用户信息 输入如下命令: example@126.com为自己在github/coding上注册用的邮箱 1$ git config --global user.email \"example@126.com\" 建议github与coding用户名尽量用同一个 1$ git config --global user.name \"注册的用户名\" 安装hexo git 插件 1$ npm install hexo-deployer-git --save 在博客目录中的站配置文件_config.yml 的deploy节点配置好仓库地址如下： deploy: type: git repo: github: git@github.com:用户名/用户名.github.io.git,master coding: git@git.coding.net:用户名/用户名.git,master github和coding都是commit到master分支。 现在博客hello-world就可以通过 用户名.github.io 或 用户名.coding.me在浏览器进行访问了。 巨人们next主题使用文档 next主题的配置和优化 购买域名、设置DNS 总结不管它，先用着，路还那么长，谁知道会踩到啥坑。","categories":[{"name":"coding tool","slug":"coding-tool","permalink":"http://yoursite.com/categories/coding-tool/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"文章标题","slug":"markdown-test","date":"2016-12-03T04:56:22.000Z","updated":"2016-12-04T05:57:09.735Z","comments":true,"path":"2016/12/03/markdown-test/","link":"","permalink":"http://yoursite.com/2016/12/03/markdown-test/","excerpt":"Welcome to MarkdownPad 2","text":"Welcome to MarkdownPad 2 MarkdownPad is 安装docker-featuredfsdfsdfsd Markdown editor for Windows. Built exclusively for MarkfdsdownEnjoy first-class Markdown support with easy access to Markdown syntax and convenient keyboard shortcuts. Give them a try: Bold (Ctrl+B) and Italic (Ctrl+I) Quotes (Ctrl+Q) Code blocks (Ctrl+K) Headings 1, 2, 3 (Ctrl+1, Ctrl+2, Ctrl+3) Lists (Ctrl+U and Ctrl+Shift+O) See your changes instantly with LivePreviewDon’t guess if your hyperlink syntax is correct; LivePreview will show you exactly what your document looks like every time you press a key. Make it your ownFonts, color schemes, layouts and stylesheets are all 100% customizable so you can turn MarkdownPad into your perfect editor. A robust editor for advanced Markdown usersMarkdownPad supports multiple Markdown processing engines, including standard Markdown, Markdown Extra (with Table support) and GitHub Flavored Markdown. ##With a##tabbed document interface, PDF export, a built-in image uploader, session management, spell check, auto-save, syntax highlighting and a built-in CSS management interface, there’s no limit to what you can do with MarkdownPad. 欢迎来到flynn的技术博客，请多指教","categories":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-12-03T04:45:32.650Z","updated":"2016-12-04T05:55:40.892Z","comments":true,"path":"2016/12/03/hello-world/","link":"","permalink":"http://yoursite.com/2016/12/03/hello-world/","excerpt":"Welcome to Hexo! This is your very first pfdsfdsfsost. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first pfdsfdsfsost. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server$ hexo server12345678```More info: [Server](https://hexo.io/docs/server.html)### Generate static files``` bash$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"hello-world","slug":"hello-world","permalink":"http://yoursite.com/categories/hello-world/"}],"tags":[{"name":"hello-world","slug":"hello-world","permalink":"http://yoursite.com/tags/hello-world/"}]}]}